(self["webpackChunk_garron_react_chart"]=self["webpackChunk_garron_react_chart"]||[]).push([[275],{89416:function(e,t,n){"use strict";n.d(t,{m:function(){return a.m}});var a=n(88910);n(52579)},73754:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return d}});var a=n(78727),r=n(59496),l=JSON.parse('{"menus":{"en-US":{"*":[{"path":"/","title":"react chart","meta":{}}],"/api":[{"path":"/api/area","title":"AreaChart","meta":{}}],"/guide":[{"path":"/guide","title":"\u4ecb\u7ecd","meta":{}},{"path":"/guide/get-started","title":"\u5f00\u59cb","meta":{}}]}},"locales":[{"name":"en-US","label":"English"}],"navs":{"en-US":[{"title":"\u6307\u5357","path":"/guide"},{"title":"\u7ec4\u4ef6","path":"/api"},{"title":"GitHub","path":"https://github.com/geallenboy/react-chart.git"},{"title":"G2Plot","path":"https://g2plot.antv.vision/"}]},"title":"react\u56fe\u8868","logo":"https://raw.githubusercontent.com/open-data-plan/g2plot-react/master/assets/logo.svg","mode":"site","repository":{"url":"https://github.com/geallenboy/react-chart","branch":"master"},"theme":{},"exportStatic":{}}'),o=n(6572),u=n(22205),i=n.n(u),c=n(26960),s={"get-started-demo":{component:(0,c.D8)({loader:function(){var e=(0,o.Z)(i().mark((function e(){var t,a,r,l,o,u,c,s;return i().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return u=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var n=o(t);if(n&&n.has(e))return n.get(e);var a={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var l in e)if("default"!==l&&Object.prototype.hasOwnProperty.call(e,l)){var u=r?Object.getOwnPropertyDescriptor(e,l):null;u&&(u.get||u.set)?Object.defineProperty(a,l,u):a[l]=e[l]}return a.default=e,n&&n.set(e,a),a},o=function(e){if("function"!==typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(o=function(e){return e?n:t})(e)},t=n(1930),e.t0=t,e.next=6,Promise.resolve().then(n.bind(n,78727));case 6:return e.t1=e.sent,a=(0,e.t0)(e.t1),e.t2=u,e.next=11,Promise.resolve().then(n.t.bind(n,59496,19));case 11:return e.t3=e.sent,r=(0,e.t2)(e.t3),e.next=15,Promise.all([n.e(223),n.e(896),n.e(524)]).then(n.bind(n,61524));case 15:return l=e.sent,c={height:400,xField:"year",yField:"value",smooth:!0,meta:{value:{max:15}},data:[{year:"1991",value:3},{year:"1992",value:4},{year:"1993",value:3.5},{year:"1994",value:5},{year:"1995",value:4.9},{year:"1996",value:6},{year:"1997",value:7},{year:"1998",value:9},{year:"1999",value:11}]},s=function(){var e=(0,r.useCallback)((function(e){console.log(e)}),[]),t=(0,r.useCallback)((function(e){console.log(e)}),[]);return r.default.createElement(l.LineChart,(0,a.default)({},c,{ref:t,chartRef:e}))},e.abrupt("return",s);case 19:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:"import React, { useCallback } from 'react';\nimport { LineChart } from '@garron/react-chart';\n\nconst config = {\n  height: 400,\n  xField: 'year',\n  yField: 'value',\n  smooth: true,\n  meta: {\n    value: {\n      max: 15\n    }\n  },\n  data: [\n    { year: '1991', value: 3 },\n    { year: '1992', value: 4 },\n    { year: '1993', value: 3.5 },\n    { year: '1994', value: 5 },\n    { year: '1995', value: 4.9 },\n    { year: '1996', value: 6 },\n    { year: '1997', value: 7 },\n    { year: '1998', value: 9 },\n    { year: '1999', value: 11 }\n  ]\n};\n\nexport default () => {\n  const getChart = useCallback((chart) => {\n    console.log(chart);\n  }, []);\n  const getContainer = useCallback((container) => {\n    console.log(container);\n  }, []);\n  return <LineChart {...config} ref={getContainer} chartRef={getChart} />;\n};"}},dependencies:{react:{version:"17.0.2"},"@garron/react-chart":{version:"1.0.0"}},identifier:"get-started-demo"}},"get-started-demo-1":{component:(0,c.D8)({loader:function(){var e=(0,o.Z)(i().mark((function e(){var t,a,r,l,o,u,c,s,v;return i().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return c=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var n=u(t);if(n&&n.has(e))return n.get(e);var a={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var l in e)if("default"!==l&&Object.prototype.hasOwnProperty.call(e,l)){var o=r?Object.getOwnPropertyDescriptor(e,l):null;o&&(o.get||o.set)?Object.defineProperty(a,l,o):a[l]=e[l]}return a.default=e,n&&n.set(e,a),a},u=function(e){if("function"!==typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(u=function(e){return e?n:t})(e)},t=n(1930),e.t0=t,e.next=6,Promise.resolve().then(n.bind(n,78727));case 6:return e.t1=e.sent,a=(0,e.t0)(e.t1),e.t2=t,e.next=11,Promise.resolve().then(n.bind(n,51508));case 11:return e.t3=e.sent,r=(0,e.t2)(e.t3),e.t4=c,e.next=16,Promise.resolve().then(n.t.bind(n,59496,19));case 16:return e.t5=e.sent,l=(0,e.t4)(e.t5),e.next=20,Promise.all([n.e(223),n.e(896),n.e(524)]).then(n.bind(n,61524));case 20:return o=e.sent,s={height:400,xField:"year",yField:"value",smooth:!0,meta:{value:{max:15}},data:[{year:"1991",value:3},{year:"1992",value:4},{year:"1993",value:3.5},{year:"1994",value:5},{year:"1995",value:4.9},{year:"1996",value:6},{year:"1997",value:7},{year:"1998",value:9},{year:"1999",value:11}]},v=function(){var e=(0,l.useCallback)((function(e){console.log(e)}),[]),t=(0,l.useCallback)((function(e){console.log(e)}),[]),n=(0,l.useState)([{year:"1991",value:3},{year:"1992",value:4},{year:"1993",value:3.5},{year:"1994",value:5},{year:"1995",value:4.9},{year:"1996",value:6},{year:"1997",value:7},{year:"1998",value:9},{year:"1999",value:11}]),u=(0,r.default)(n,2),i=u[0],c=u[1],v=(0,l.useCallback)((function(){c((function(e){var t=e.pop();return e.concat(t,{year:(+t.year+1).toString(),value:10*Math.random()})}))}),[]);return l.default.createElement("div",null,l.default.createElement("button",{onClick:v},"Update Data"),l.default.createElement(o.LineChart,(0,a.default)({},s,{ref:t,chartRef:e,data:i})))},e.abrupt("return",v);case 24:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:"import React, { useCallback, useState } from 'react';\nimport { LineChart } from '@garron/react-chart';\n\nconst config = {\n  height: 400,\n  xField: 'year',\n  yField: 'value',\n  smooth: true,\n  meta: {\n    value: {\n      max: 15\n    }\n  },\n  data: [\n    { year: '1991', value: 3 },\n    { year: '1992', value: 4 },\n    { year: '1993', value: 3.5 },\n    { year: '1994', value: 5 },\n    { year: '1995', value: 4.9 },\n    { year: '1996', value: 6 },\n    { year: '1997', value: 7 },\n    { year: '1998', value: 9 },\n    { year: '1999', value: 11 }\n  ]\n};\n\nexport default () => {\n  const getChart = useCallback((chart) => {\n    console.log(chart);\n  }, []);\n  const getContainer = useCallback((container) => {\n    console.log(container);\n  }, []);\n\n  const [data, setData] = useState([\n    { year: '1991', value: 3 },\n    { year: '1992', value: 4 },\n    { year: '1993', value: 3.5 },\n    { year: '1994', value: 5 },\n    { year: '1995', value: 4.9 },\n    { year: '1996', value: 6 },\n    { year: '1997', value: 7 },\n    { year: '1998', value: 9 },\n    { year: '1999', value: 11 }\n  ]);\n\n  const handleBtnClick = useCallback(() => {\n    setData((items) => {\n      const last = items.pop();\n\n      return items.concat(last, {\n        year: (+last.year + 1).toString(),\n        value: Math.random() * 10\n      });\n    });\n  }, []);\n\n  return (\n    <div>\n      <button onClick={handleBtnClick}>Update Data</button>\n      <LineChart {...config} ref={getContainer} chartRef={getChart} data={data} />\n    </div>\n  );\n};"}},dependencies:{react:{version:"17.0.2"},"@garron/react-chart":{version:"1.0.0"}},identifier:"get-started-demo-1"}},"get-started-demo-2":{component:(0,c.D8)({loader:function(){var e=(0,o.Z)(i().mark((function e(){var t,a,r,l,o,u,c,s,v;return i().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return c=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var n=u(t);if(n&&n.has(e))return n.get(e);var a={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var l in e)if("default"!==l&&Object.prototype.hasOwnProperty.call(e,l)){var o=r?Object.getOwnPropertyDescriptor(e,l):null;o&&(o.get||o.set)?Object.defineProperty(a,l,o):a[l]=e[l]}return a.default=e,n&&n.set(e,a),a},u=function(e){if("function"!==typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(u=function(e){return e?n:t})(e)},t=n(1930),e.t0=t,e.next=6,Promise.resolve().then(n.bind(n,78727));case 6:return e.t1=e.sent,a=(0,e.t0)(e.t1),e.t2=t,e.next=11,Promise.resolve().then(n.bind(n,51508));case 11:return e.t3=e.sent,r=(0,e.t2)(e.t3),e.t4=c,e.next=16,Promise.resolve().then(n.t.bind(n,59496,19));case 16:return e.t5=e.sent,l=(0,e.t4)(e.t5),e.next=20,Promise.all([n.e(223),n.e(896),n.e(524)]).then(n.bind(n,61524));case 20:return o=e.sent,s={height:400,xField:"year",yField:"value",smooth:!0,meta:{value:{max:15}},data:[{year:"1991",value:3},{year:"1992",value:4},{year:"1993",value:3.5},{year:"1994",value:5},{year:"1995",value:4.9},{year:"1996",value:6},{year:"1997",value:7},{year:"1998",value:9},{year:"1999",value:11}]},v=function(){var e=(0,l.useCallback)((function(e){console.log(e)}),[]),t=(0,l.useCallback)((function(e){console.log(e)}),[]),n=(0,l.useState)({}),u=(0,r.default)(n,2),i=u[0],c=u[1],v=(0,l.useCallback)((function(){c((function(e){return{point:e.point?void 0:{}}}))}),[]);return l.default.createElement("div",null,l.default.createElement("button",{onClick:v},"Update Config"),l.default.createElement(o.LineChart,(0,a.default)({},s,{ref:t,chartRef:e},i)))},e.abrupt("return",v);case 24:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:"import React, { useCallback, useState } from 'react';\nimport { LineChart } from '@garron/react-chart';\n\nconst config = {\n  height: 400,\n  xField: 'year',\n  yField: 'value',\n  smooth: true,\n  meta: {\n    value: {\n      max: 15\n    }\n  },\n  data: [\n    { year: '1991', value: 3 },\n    { year: '1992', value: 4 },\n    { year: '1993', value: 3.5 },\n    { year: '1994', value: 5 },\n    { year: '1995', value: 4.9 },\n    { year: '1996', value: 6 },\n    { year: '1997', value: 7 },\n    { year: '1998', value: 9 },\n    { year: '1999', value: 11 }\n  ]\n};\n\nexport default () => {\n  const getChart = useCallback((chart) => {\n    console.log(chart);\n  }, []);\n  const getContainer = useCallback((container) => {\n    console.log(container);\n  }, []);\n\n  const [restConfig, setConfig] = useState({});\n\n  const handleBtnClick = useCallback(() => {\n    setConfig((config) => ({\n      point: config.point ? undefined : {}\n    }));\n  }, []);\n\n  return (\n    <div>\n      <button onClick={handleBtnClick}>Update Config</button>\n      <LineChart {...config} ref={getContainer} chartRef={getChart} {...restConfig} />\n    </div>\n  );\n};"}},dependencies:{react:{version:"17.0.2"},"@garron/react-chart":{version:"1.0.0"}},identifier:"get-started-demo-2"}}},v={},f=n(83802),d=e=>r.createElement(f.Z,(0,a.default)({},e,{config:l,demos:s,apis:v}))}}]);